"use strict";(globalThis.webpackChunkyour_app_name=globalThis.webpackChunkyour_app_name||[]).push([[523],{2523:(t,e,r)=>{r.r(e),r.d(e,{DracoLoader:()=>k,DracoWorkerLoader:()=>l,DracoWriter:()=>j,DracoWriterWorker:()=>G,_TypecheckDracoLoader:()=>q});var a={};r.r(a),r.d(a,{readFileAsArrayBuffer:()=>S,readFileAsText:()=>O,requireFromFile:()=>E,requireFromString:()=>F});const n={self:"undefined"!==typeof self&&self,window:"undefined"!==typeof window&&window,global:"undefined"!==typeof r.g&&r.g,document:"undefined"!==typeof document&&document},i=n.global||n.self||n.window||{},o="object"!==typeof process||"[object process]"!==String(process)||process.browser,s="function"===typeof importScripts,c=("undefined"!==typeof window&&window.orientation,"undefined"!==typeof process&&process.version&&/v([0-9]*)/.exec(process.version)),d=(c&&parseFloat(c[1]),"3.4.15"),u={draco:{decoderType:"object"===typeof WebAssembly?"wasm":"js",libraryPath:"libs/",extraAttributes:{},attributeNameEntry:void 0}},l={name:"Draco",id:o?"draco":"draco-nodejs",module:"draco",shapes:["mesh"],version:d,worker:!0,extensions:["drc"],mimeTypes:["application/octet-stream"],binary:!0,tests:["DRACO"],options:u};var h=r(6713);class Field{constructor(t,e){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Map;(0,h.A)(this,"name",void 0),(0,h.A)(this,"type",void 0),(0,h.A)(this,"nullable",void 0),(0,h.A)(this,"metadata",void 0),this.name=t,this.type=e,this.nullable=r,this.metadata=a}get typeId(){return this.type&&this.type.typeId}clone(){return new Field(this.name,this.type,this.nullable,this.metadata)}compareTo(t){return this.name===t.name&&this.type===t.type&&this.nullable===t.nullable&&this.metadata===t.metadata}toString(){return"".concat(this.type).concat(this.nullable?", nullable":"").concat(this.metadata?", metadata: ".concat(this.metadata):"")}}let y,m,f,p,b,A,g,_,w=function(t){return t[t.NONE=0]="NONE",t[t.Null=1]="Null",t[t.Int=2]="Int",t[t.Float=3]="Float",t[t.Binary=4]="Binary",t[t.Utf8=5]="Utf8",t[t.Bool=6]="Bool",t[t.Decimal=7]="Decimal",t[t.Date=8]="Date",t[t.Time=9]="Time",t[t.Timestamp=10]="Timestamp",t[t.Interval=11]="Interval",t[t.List=12]="List",t[t.Struct=13]="Struct",t[t.Union=14]="Union",t[t.FixedSizeBinary=15]="FixedSizeBinary",t[t.FixedSizeList=16]="FixedSizeList",t[t.Map=17]="Map",t[t.Dictionary=-1]="Dictionary",t[t.Int8=-2]="Int8",t[t.Int16=-3]="Int16",t[t.Int32=-4]="Int32",t[t.Int64=-5]="Int64",t[t.Uint8=-6]="Uint8",t[t.Uint16=-7]="Uint16",t[t.Uint32=-8]="Uint32",t[t.Uint64=-9]="Uint64",t[t.Float16=-10]="Float16",t[t.Float32=-11]="Float32",t[t.Float64=-12]="Float64",t[t.DateDay=-13]="DateDay",t[t.DateMillisecond=-14]="DateMillisecond",t[t.TimestampSecond=-15]="TimestampSecond",t[t.TimestampMillisecond=-16]="TimestampMillisecond",t[t.TimestampMicrosecond=-17]="TimestampMicrosecond",t[t.TimestampNanosecond=-18]="TimestampNanosecond",t[t.TimeSecond=-19]="TimeSecond",t[t.TimeMillisecond=-20]="TimeMillisecond",t[t.TimeMicrosecond=-21]="TimeMicrosecond",t[t.TimeNanosecond=-22]="TimeNanosecond",t[t.DenseUnion=-23]="DenseUnion",t[t.SparseUnion=-24]="SparseUnion",t[t.IntervalDayTime=-25]="IntervalDayTime",t[t.IntervalYearMonth=-26]="IntervalYearMonth",t}({});class DataType{static isNull(t){return t&&t.typeId===w.Null}static isInt(t){return t&&t.typeId===w.Int}static isFloat(t){return t&&t.typeId===w.Float}static isBinary(t){return t&&t.typeId===w.Binary}static isUtf8(t){return t&&t.typeId===w.Utf8}static isBool(t){return t&&t.typeId===w.Bool}static isDecimal(t){return t&&t.typeId===w.Decimal}static isDate(t){return t&&t.typeId===w.Date}static isTime(t){return t&&t.typeId===w.Time}static isTimestamp(t){return t&&t.typeId===w.Timestamp}static isInterval(t){return t&&t.typeId===w.Interval}static isList(t){return t&&t.typeId===w.List}static isStruct(t){return t&&t.typeId===w.Struct}static isUnion(t){return t&&t.typeId===w.Union}static isFixedSizeBinary(t){return t&&t.typeId===w.FixedSizeBinary}static isFixedSizeList(t){return t&&t.typeId===w.FixedSizeList}static isMap(t){return t&&t.typeId===w.Map}static isDictionary(t){return t&&t.typeId===w.Dictionary}get typeId(){return w.NONE}compareTo(t){return this===t}}Symbol.toStringTag;Symbol.toStringTag;y=Symbol.toStringTag;class Int extends DataType{constructor(t,e){super(),(0,h.A)(this,"isSigned",void 0),(0,h.A)(this,"bitWidth",void 0),this.isSigned=t,this.bitWidth=e}get typeId(){return w.Int}get[y](){return"Int"}toString(){return"".concat(this.isSigned?"I":"Ui","nt").concat(this.bitWidth)}}class Int8 extends Int{constructor(){super(!0,8)}}class Int16 extends Int{constructor(){super(!0,16)}}class Int32 extends Int{constructor(){super(!0,32)}}class Uint8 extends Int{constructor(){super(!1,8)}}class Uint16 extends Int{constructor(){super(!1,16)}}class Uint32 extends Int{constructor(){super(!1,32)}}const I=32,T=64;m=Symbol.toStringTag;class Float extends DataType{constructor(t){super(),(0,h.A)(this,"precision",void 0),this.precision=t}get typeId(){return w.Float}get[m](){return"Float"}toString(){return"Float".concat(this.precision)}}class Float32 extends Float{constructor(){super(I)}}class Float64 extends Float{constructor(){super(T)}}Symbol.toStringTag;Symbol.toStringTag;f=Symbol.toStringTag;p=Symbol.toStringTag;b=Symbol.toStringTag;A=Symbol.toStringTag;g=Symbol.toStringTag;class FixedSizeList extends DataType{constructor(t,e){super(),(0,h.A)(this,"listSize",void 0),(0,h.A)(this,"children",void 0),this.listSize=t,this.children=[e]}get typeId(){return w.FixedSizeList}get valueType(){return this.children[0].type}get valueField(){return this.children[0]}get[g](){return"FixedSizeList"}toString(){return"FixedSizeList[".concat(this.listSize,"]<").concat(this.valueType,">")}}_=Symbol.toStringTag;function deduceMeshField(t,e,r){const a=function getArrowTypeFromTypedArray(t){switch(t.constructor){case Int8Array:return new Int8;case Uint8Array:return new Uint8;case Int16Array:return new Int16;case Uint16Array:return new Uint16;case Int32Array:return new Int32;case Uint32Array:return new Uint32;case Float32Array:return new Float32;case Float64Array:return new Float64;default:throw new Error("array type not supported")}}(e.value),n=r||function makeMeshAttributeMetadata(t){const e=new Map;"byteOffset"in t&&e.set("byteOffset",t.byteOffset.toString(10));"byteStride"in t&&e.set("byteStride",t.byteStride.toString(10));"normalized"in t&&e.set("normalized",t.normalized.toString());return e}(e);return new Field(t,new FixedSizeList(e.size,new Field("value",a)),!1,n)}class schema_Schema{constructor(t,e){(0,h.A)(this,"fields",void 0),(0,h.A)(this,"metadata",void 0),function assert(t,e){if(!t)throw new Error(e||"loader assertion failed.")}(Array.isArray(t)),function checkNames(t){const e={};for(const r of t)e[r.name]&&console.warn("Schema: duplicated field name",r.name,r),e[r.name]=!0}(t),this.fields=t,this.metadata=e||new Map}compareTo(t){if(this.metadata!==t.metadata)return!1;if(this.fields.length!==t.fields.length)return!1;for(let e=0;e<this.fields.length;++e)if(!this.fields[e].compareTo(t.fields[e]))return!1;return!0}select(){const t=Object.create(null);for(var e=arguments.length,r=new Array(e),a=0;a<e;a++)r[a]=arguments[a];for(const i of r)t[i]=!0;const n=this.fields.filter((e=>t[e.name]));return new schema_Schema(n,this.metadata)}selectAt(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];const a=e.map((t=>this.fields[t])).filter(Boolean);return new schema_Schema(a,this.metadata)}assign(t){let e,r=this.metadata;if(t instanceof schema_Schema){const a=t;e=a.fields,r=mergeMaps(mergeMaps(new Map,this.metadata),a.metadata)}else e=t;const a=Object.create(null);for(const i of this.fields)a[i.name]=i;for(const i of e)a[i.name]=i;const n=Object.values(a);return new schema_Schema(n,r)}}function mergeMaps(t,e){return new Map([...t||new Map,...e||new Map])}function getArrowFieldFromAttribute(t,e,r){return deduceMeshField(t,e,r?makeMetadata(r.metadata):void 0)}function makeMetadata(t){const e=new Map;for(const r in t)e.set("".concat(r,".string"),JSON.stringify(t[r]));return e}const M={POSITION:"POSITION",NORMAL:"NORMAL",COLOR:"COLOR_0",TEX_COORD:"TEXCOORD_0"},D={1:Int8Array,2:Uint8Array,3:Int16Array,4:Uint16Array,5:Int32Array,6:Uint32Array,9:Float32Array};class DracoParser{constructor(t){(0,h.A)(this,"draco",void 0),(0,h.A)(this,"decoder",void 0),(0,h.A)(this,"metadataQuerier",void 0),this.draco=t,this.decoder=new this.draco.Decoder,this.metadataQuerier=new this.draco.MetadataQuerier}destroy(){this.draco.destroy(this.decoder),this.draco.destroy(this.metadataQuerier)}parseSync(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=new this.draco.DecoderBuffer;r.Init(new Int8Array(t),t.byteLength),this._disableAttributeTransforms(e);const a=this.decoder.GetEncodedGeometryType(r),n=a===this.draco.TRIANGULAR_MESH?new this.draco.Mesh:new this.draco.PointCloud;try{let t;switch(a){case this.draco.TRIANGULAR_MESH:t=this.decoder.DecodeBufferToMesh(r,n);break;case this.draco.POINT_CLOUD:t=this.decoder.DecodeBufferToPointCloud(r,n);break;default:throw new Error("DRACO: Unknown geometry type.")}if(!t.ok()||!n.ptr){const e="DRACO decompression failed: ".concat(t.error_msg());throw new Error(e)}const i=this._getDracoLoaderData(n,a,e),o=this._getMeshData(n,i,e),s=function getMeshBoundingBox(t){let e=1/0,r=1/0,a=1/0,n=-1/0,i=-1/0,o=-1/0;const s=t.POSITION?t.POSITION.value:[],c=s&&s.length;for(let d=0;d<c;d+=3){const t=s[d],c=s[d+1],u=s[d+2];e=t<e?t:e,r=c<r?c:r,a=u<a?u:a,n=t>n?t:n,i=c>i?c:i,o=u>o?u:o}return[[e,r,a],[n,i,o]]}(o.attributes),c=function getDracoSchema(t,e,r){const a=makeMetadata(e.metadata),n=[],i=function transformAttributesLoaderData(t){const e={};for(const r in t){const a=t[r];e[a.name||"undefined"]=a}return e}(e.attributes);for(const o in t){const e=getArrowFieldFromAttribute(o,t[o],i[o]);n.push(e)}if(r){const t=getArrowFieldFromAttribute("indices",r);n.push(t)}return new schema_Schema(n,a)}(o.attributes,i,o.indices);return{loader:"draco",loaderData:i,header:{vertexCount:n.num_points(),boundingBox:s},...o,schema:c}}finally{this.draco.destroy(r),n&&this.draco.destroy(n)}}_getDracoLoaderData(t,e,r){const a=this._getTopLevelMetadata(t),n=this._getDracoAttributes(t,r);return{geometry_type:e,num_attributes:t.num_attributes(),num_points:t.num_points(),num_faces:t instanceof this.draco.Mesh?t.num_faces():0,metadata:a,attributes:n}}_getDracoAttributes(t,e){const r={};for(let a=0;a<t.num_attributes();a++){const n=this.decoder.GetAttribute(t,a),i=this._getAttributeMetadata(t,a);r[n.unique_id()]={unique_id:n.unique_id(),attribute_type:n.attribute_type(),data_type:n.data_type(),num_components:n.num_components(),byte_offset:n.byte_offset(),byte_stride:n.byte_stride(),normalized:n.normalized(),attribute_index:a,metadata:i};const o=this._getQuantizationTransform(n,e);o&&(r[n.unique_id()].quantization_transform=o);const s=this._getOctahedronTransform(n,e);s&&(r[n.unique_id()].octahedron_transform=s)}return r}_getMeshData(t,e,r){const a=this._getMeshAttributes(e,t,r);if(!a.POSITION)throw new Error("DRACO: No position attribute found.");return t instanceof this.draco.Mesh?"triangle-strip"===r.topology?{topology:"triangle-strip",mode:4,attributes:a,indices:{value:this._getTriangleStripIndices(t),size:1}}:{topology:"triangle-list",mode:5,attributes:a,indices:{value:this._getTriangleListIndices(t),size:1}}:{topology:"point-list",mode:0,attributes:a}}_getMeshAttributes(t,e,r){const a={};for(const n of Object.values(t.attributes)){const t=this._deduceAttributeName(n,r);n.name=t;const{value:i,size:o}=this._getAttributeValues(e,n);a[t]={value:i,size:o,byteOffset:n.byte_offset,byteStride:n.byte_stride,normalized:n.normalized}}return a}_getTriangleListIndices(t){const e=3*t.num_faces(),r=4*e,a=this.draco._malloc(r);try{return this.decoder.GetTrianglesUInt32Array(t,r,a),new Uint32Array(this.draco.HEAPF32.buffer,a,e).slice()}finally{this.draco._free(a)}}_getTriangleStripIndices(t){const e=new this.draco.DracoInt32Array;try{return this.decoder.GetTriangleStripsFromMesh(t,e),function getUint32Array(t){const e=t.size(),r=new Int32Array(e);for(let a=0;a<e;a++)r[a]=t.GetValue(a);return r}(e)}finally{this.draco.destroy(e)}}_getAttributeValues(t,e){const r=D[e.data_type],a=e.num_components,n=t.num_points()*a,i=n*r.BYTES_PER_ELEMENT,o=function getDracoDataType(t,e){switch(e){case Float32Array:return t.DT_FLOAT32;case Int8Array:return t.DT_INT8;case Int16Array:return t.DT_INT16;case Int32Array:return t.DT_INT32;case Uint8Array:return t.DT_UINT8;case Uint16Array:return t.DT_UINT16;case Uint32Array:return t.DT_UINT32;default:return t.DT_INVALID}}(this.draco,r);let s;const c=this.draco._malloc(i);try{const a=this.decoder.GetAttribute(t,e.attribute_index);this.decoder.GetAttributeDataArrayForAllPoints(t,a,o,i,c),s=new r(this.draco.HEAPF32.buffer,c,n).slice()}finally{this.draco._free(c)}return{value:s,size:a}}_deduceAttributeName(t,e){const r=t.unique_id;for(const[i,o]of Object.entries(e.extraAttributes||{}))if(o===r)return i;const a=t.attribute_type;for(const i in M){if(this.draco[i]===a)return M[i]}const n=e.attributeNameEntry||"name";return t.metadata[n]?t.metadata[n].string:"CUSTOM_ATTRIBUTE_".concat(r)}_getTopLevelMetadata(t){const e=this.decoder.GetMetadata(t);return this._getDracoMetadata(e)}_getAttributeMetadata(t,e){const r=this.decoder.GetAttributeMetadata(t,e);return this._getDracoMetadata(r)}_getDracoMetadata(t){if(!t||!t.ptr)return{};const e={},r=this.metadataQuerier.NumEntries(t);for(let a=0;a<r;a++){const r=this.metadataQuerier.GetEntryName(t,a);e[r]=this._getDracoMetadataField(t,r)}return e}_getDracoMetadataField(t,e){const r=new this.draco.DracoInt32Array;try{this.metadataQuerier.GetIntEntryArray(t,e,r);const a=function getInt32Array(t){const e=t.size(),r=new Int32Array(e);for(let a=0;a<e;a++)r[a]=t.GetValue(a);return r}(r);return{int:this.metadataQuerier.GetIntEntry(t,e),string:this.metadataQuerier.GetStringEntry(t,e),double:this.metadataQuerier.GetDoubleEntry(t,e),intArray:a}}finally{this.draco.destroy(r)}}_disableAttributeTransforms(t){const{quantizedAttributes:e=[],octahedronAttributes:r=[]}=t,a=[...e,...r];for(const n of a)this.decoder.SkipAttributeTransform(this.draco[n])}_getQuantizationTransform(t,e){const{quantizedAttributes:r=[]}=e,a=t.attribute_type();if(r.map((t=>this.decoder[t])).includes(a)){const e=new this.draco.AttributeQuantizationTransform;try{if(e.InitFromAttribute(t))return{quantization_bits:e.quantization_bits(),range:e.range(),min_values:new Float32Array([1,2,3]).map((t=>e.min_value(t)))}}finally{this.draco.destroy(e)}}return null}_getOctahedronTransform(t,e){const{octahedronAttributes:r=[]}=e,a=t.attribute_type();if(r.map((t=>this.decoder[t])).includes(a)){const e=new this.draco.AttributeQuantizationTransform;try{if(e.InitFromAttribute(t))return{quantization_bits:e.quantization_bits()}}finally{this.draco.destroy(e)}}return null}}const S=null,O=null,E=null,F=null;const v="3.4.15",U={};async function loadLibrary(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return e&&(t=function getLibraryUrl(t,e,r){if(t.startsWith("http"))return t;const a=r.modules||{};if(a[t])return a[t];if(!o)return"modules/".concat(e,"/dist/libs/").concat(t);if(r.CDN)return function assert_assert(t,e){if(!t)throw new Error(e||"loaders.gl assertion failed.")}(r.CDN.startsWith("http")),"".concat(r.CDN,"/").concat(e,"@").concat(v,"/dist/libs/").concat(t);if(s)return"../src/libs/".concat(t);return"modules/".concat(e,"/src/libs/").concat(t)}(t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:{})),U[t]=U[t]||async function loadLibraryFromFile(t){if(t.endsWith("wasm")){const e=await fetch(t);return await e.arrayBuffer()}if(!o)try{return a&&E&&await E(t)}catch{return null}if(s)return importScripts(t);const e=await fetch(t);return function loadLibraryFromString(t,e){if(!o)return F&&F(t,e);if(s)return eval.call(i,t),null;const r=document.createElement("script");r.id=e;try{r.appendChild(document.createTextNode(t))}catch(a){r.text=t}return document.body.appendChild(r),null}(await e.text(),t)}(t),await U[t]}const N="https://www.gstatic.com/draco/versioned/decoders/".concat("1.5.5"),L="".concat(N,"/draco_decoder.js"),z="".concat(N,"/draco_wasm_wrapper.js"),B="".concat(N,"/draco_decoder.wasm"),x="https://raw.githubusercontent.com/google/draco/".concat("1.4.1","/javascript/draco_encoder.js");let C,P;async function loadDracoDecoderModule(t){const e=t.modules||{};return C=e.draco3d?C||e.draco3d.createDecoderModule({}).then((t=>({draco:t}))):C||async function loadDracoDecoder(t){let e,r;if("js"===(t.draco&&t.draco.decoderType))e=await loadLibrary(L,"draco",t);else[e,r]=await Promise.all([await loadLibrary(z,"draco",t),await loadLibrary(B,"draco",t)]);return e=e||globalThis.DracoDecoderModule,await function initializeDracoDecoder(t,e){const r={};e&&(r.wasmBinary=e);return new Promise((e=>{t({...r,onModuleLoaded:t=>e({draco:t})})}))}(e,r)}(t),await C}async function loadDracoEncoderModule(t){const e=t.modules||{};return P=e.draco3d?P||e.draco3d.createEncoderModule({}).then((t=>({draco:t}))):P||async function loadDracoEncoder(t){let e=await loadLibrary(x,"draco",t);return e=e||globalThis.DracoEncoderModule,new Promise((t=>{e({onModuleLoaded:e=>t({draco:e})})}))}(t),await P}const R={POSITION:"POSITION",NORMAL:"NORMAL",COLOR_0:"COLOR",TEXCOORD_0:"TEX_COORD"},noop=()=>{};class DracoBuilder{constructor(t){(0,h.A)(this,"draco",void 0),(0,h.A)(this,"dracoEncoder",void 0),(0,h.A)(this,"dracoMeshBuilder",void 0),(0,h.A)(this,"dracoMetadataBuilder",void 0),(0,h.A)(this,"log",void 0),this.draco=t,this.dracoEncoder=new this.draco.Encoder,this.dracoMeshBuilder=new this.draco.MeshBuilder,this.dracoMetadataBuilder=new this.draco.MetadataBuilder}destroy(){this.destroyEncodedObject(this.dracoMeshBuilder),this.destroyEncodedObject(this.dracoEncoder),this.destroyEncodedObject(this.dracoMetadataBuilder),this.dracoMeshBuilder=null,this.dracoEncoder=null,this.draco=null}destroyEncodedObject(t){t&&this.draco.destroy(t)}encodeSync(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.log=noop,this._setOptions(e),e.pointcloud?this._encodePointCloud(t,e):this._encodeMesh(t,e)}_getAttributesFromMesh(t){const e={...t,...t.attributes};return t.indices&&(e.indices=t.indices),e}_encodePointCloud(t,e){const r=new this.draco.PointCloud;e.metadata&&this._addGeometryMetadata(r,e.metadata);const a=this._getAttributesFromMesh(t);this._createDracoPointCloud(r,a,e);const n=new this.draco.DracoInt8Array;try{const t=this.dracoEncoder.EncodePointCloudToDracoBuffer(r,!1,n);if(!(t>0))throw new Error("Draco encoding failed.");return this.log("DRACO encoded ".concat(r.num_points()," points\n        with ").concat(r.num_attributes()," attributes into ").concat(t," bytes")),dracoInt8ArrayToArrayBuffer(n)}finally{this.destroyEncodedObject(n),this.destroyEncodedObject(r)}}_encodeMesh(t,e){const r=new this.draco.Mesh;e.metadata&&this._addGeometryMetadata(r,e.metadata);const a=this._getAttributesFromMesh(t);this._createDracoMesh(r,a,e);const n=new this.draco.DracoInt8Array;try{const t=this.dracoEncoder.EncodeMeshToDracoBuffer(r,n);if(t<=0)throw new Error("Draco encoding failed.");return this.log("DRACO encoded ".concat(r.num_points()," points\n        with ").concat(r.num_attributes()," attributes into ").concat(t," bytes")),dracoInt8ArrayToArrayBuffer(n)}finally{this.destroyEncodedObject(n),this.destroyEncodedObject(r)}}_setOptions(t){if("speed"in t&&this.dracoEncoder.SetSpeedOptions(...t.speed),"method"in t){const e=this.draco[t.method||"MESH_SEQUENTIAL_ENCODING"];this.dracoEncoder.SetEncodingMethod(e)}if("quantization"in t)for(const e in t.quantization){const r=t.quantization[e],a=this.draco[e];this.dracoEncoder.SetAttributeQuantization(a,r)}}_createDracoMesh(t,e,r){const a=r.attributesMetadata||{};try{const r=this._getPositionAttribute(e);if(!r)throw new Error("positions");const n=r.length/3;for(let i in e){const r=e[i];i=R[i]||i;const o=this._addAttributeToMesh(t,i,r,n);-1!==o&&this._addAttributeMetadata(t,o,{name:i,...a[i]||{}})}}catch(n){throw this.destroyEncodedObject(t),n}return t}_createDracoPointCloud(t,e,r){const a=r.attributesMetadata||{};try{const r=this._getPositionAttribute(e);if(!r)throw new Error("positions");const n=r.length/3;for(let i in e){const r=e[i];i=R[i]||i;const o=this._addAttributeToMesh(t,i,r,n);-1!==o&&this._addAttributeMetadata(t,o,{name:i,...a[i]||{}})}}catch(n){throw this.destroyEncodedObject(t),n}return t}_addAttributeToMesh(t,e,r,a){if(!ArrayBuffer.isView(r))return-1;const n=this._getDracoAttributeType(e),i=r.length/a;if("indices"===n){const a=r.length/3;return this.log("Adding attribute ".concat(e,", size ").concat(a)),this.dracoMeshBuilder.AddFacesToMesh(t,a,r),-1}this.log("Adding attribute ".concat(e,", size ").concat(i));const o=this.dracoMeshBuilder,{buffer:s}=r;switch(r.constructor){case Int8Array:return o.AddInt8Attribute(t,n,a,i,new Int8Array(s));case Int16Array:return o.AddInt16Attribute(t,n,a,i,new Int16Array(s));case Int32Array:return o.AddInt32Attribute(t,n,a,i,new Int32Array(s));case Uint8Array:case Uint8ClampedArray:return o.AddUInt8Attribute(t,n,a,i,new Uint8Array(s));case Uint16Array:return o.AddUInt16Attribute(t,n,a,i,new Uint16Array(s));case Uint32Array:return o.AddUInt32Attribute(t,n,a,i,new Uint32Array(s));case Float32Array:default:return o.AddFloatAttribute(t,n,a,i,new Float32Array(s))}}_getDracoAttributeType(t){switch(t.toLowerCase()){case"indices":return"indices";case"position":case"positions":case"vertices":return this.draco.POSITION;case"normal":case"normals":return this.draco.NORMAL;case"color":case"colors":return this.draco.COLOR;case"texcoord":case"texcoords":return this.draco.TEX_COORD;default:return this.draco.GENERIC}}_getPositionAttribute(t){for(const e in t){const r=t[e];if(this._getDracoAttributeType(e)===this.draco.POSITION)return r}return null}_addGeometryMetadata(t,e){const r=new this.draco.Metadata;this._populateDracoMetadata(r,e),this.dracoMeshBuilder.AddMetadata(t,r)}_addAttributeMetadata(t,e,r){const a=new this.draco.Metadata;this._populateDracoMetadata(a,r),this.dracoMeshBuilder.SetMetadataForAttribute(t,e,a)}_populateDracoMetadata(t,e){for(const[r,a]of function getEntries(t){return t.entries&&!t.hasOwnProperty("entries")?t.entries():Object.entries(t)}(e))switch(typeof a){case"number":Math.trunc(a)===a?this.dracoMetadataBuilder.AddIntEntry(t,r,a):this.dracoMetadataBuilder.AddDoubleEntry(t,r,a);break;case"object":a instanceof Int32Array&&this.dracoMetadataBuilder.AddIntEntryArray(t,r,a,a.length);break;default:this.dracoMetadataBuilder.AddStringEntry(t,r,a)}}}function dracoInt8ArrayToArrayBuffer(t){const e=t.size(),r=new ArrayBuffer(e),a=new Int8Array(r);for(let n=0;n<e;++n)a[n]=t.GetValue(n);return r}const j={name:"DRACO",id:"draco",module:"draco",version:d,extensions:["drc"],encode:async function encode(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{draco:r}=await loadDracoEncoderModule(e),a=new DracoBuilder(r);try{return a.encodeSync(t,e.draco)}finally{a.destroy()}},options:{draco:{pointcloud:!1,attributeNameEntry:"name"}}};const G={id:o?"draco-writer":"draco-writer-nodejs",name:"Draco compressed geometry writer",module:"draco",version:d,worker:!0,options:{draco:{},source:null}},k={...l,parse:async function parse(t,e){const{draco:r}=await loadDracoDecoderModule(e),a=new DracoParser(r);try{return a.parseSync(t,null===e||void 0===e?void 0:e.draco)}finally{a.destroy()}}};const q=k}}]);
//# sourceMappingURL=523.132d0660.chunk.js.map